---
import Card from "../../components/Card.tsx";
import { getCategories, getCategoryBooks } from "../../db";
import type { Book } from "../../db/types";
import Layout from "../../layouts/Layout.astro";
export async function getStaticPaths() {
  const categories = getCategories()
    .filter((c) => !!c.category_name)
    .map((c) => ({
      params: { id: c.category_id },
      props: { name: c.category_name },
    }));
  return categories;
}
const { id } = Astro.params;
const { name } = Astro.props;
const books = getCategoryBooks(Number(id)).filter(
  (b) => !!b.pdf_links
) as Partial<Book & { author_name: string; category_name: string }>[];
---

<Layout title={"كتب " + name}>
  <main>
    <h1><span class="text-gradient">خزانة</span></h1>
    <p class="instructions">
      خزانة هي مجموعة من الكتب التي يمكنك قراءتها مجانًا عبر الإنترنت. يمكنك
      أيضًا تحميل الكتب بتنسيق PDF.
    </p>
    <ul role="list" class="link-card-grid">
      {
        books.map((b) => (
          <Card
            href={`/book/${b.book_id}/`}
            title={b.book_name}
            author_name={b.author_name}
            category_name={b.category_name}
          />
        ))
      }
    </ul>
  </main>
</Layout>
<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: black;
    font-size: 20px;
    line-height: 1.6;
    background-color: white;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 75%);
    background: linear-gradient(
      rgba(var(--accent-light), 66%),
      rgba(var(--accent-light), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-dark), 12%);
    color: rgb(var(--accent-dark));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-dark));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
 ../../components/Card.tsx
